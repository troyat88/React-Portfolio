{"ast":null,"code":"var _jsxFileName = \"/Users/Troy/Desktop/React-Portfolio/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\n// Email Form: Name, Email, Message\n// Display my email, GitHub and LinkedIn Links\nimport React, { useState } from 'react';\nimport { checkPassword, validateEmail } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    // Getting the value and name of the input which triggered the change\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value; // Based on the input type, we set the state of either email, username, and password\n\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'name') {\n      setName(inputValue);\n    } else {\n      setPassword(inputValue);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault(); // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n\n    if (!validateEmail(email) || !name) {\n      setErrorMessage('Email or name is invalid'); // We want to exit out of this code block if something is wrong so that the user can correct it\n\n      return; // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n    }\n\n    if (!checkPassword(password)) {\n      setErrorMessage(`Choose a more secure password for the account: ${name}`);\n      return;\n    } //alert(`Hello ${name}`);\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\n\n\n    setName('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"25rem\",\n          backgroundColor: \"cornflowerblue\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: handleInputChange,\n            name: \"email\",\n            type: \"email\",\n            className: \"form-control\",\n            id: \"exampleFormControlInput1\",\n            placeholder: \"Enter Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: handleInputChange,\n            name: \"name\",\n            type: \"name\",\n            className: \"form-control\",\n            id: \"exampleFormControlInput1\",\n            placeholder: \"Enter Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleFormControlTextarea1\",\n            className: \"form-label\",\n            children: \"Enter Your Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"exampleFormControlTextarea1\",\n            rows: 8,\n            defaultValue: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card=footer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleFormSubmit,\n              children: \"Send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Contact, \"j9jN844R4WLnBUM66ELHvVtq+fg=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/Troy/Desktop/React-Portfolio/src/components/Contact.js"],"names":["React","useState","checkPassword","validateEmail","Contact","email","setEmail","name","setName","password","setPassword","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","inputValue","value","handleFormSubmit","preventDefault","width","backgroundColor"],"mappings":"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","sourcesContent":["// Email Form: Name, Email, Message\n// Display my email, GitHub and LinkedIn Links\n\nimport React, { useState }from 'react'\nimport { checkPassword, validateEmail } from '../utils/helpers';\n\nfunction Contact() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Based on the input type, we set the state of either email, username, and password\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'name') {\n      setName(inputValue);\n    } else {\n      setPassword(inputValue);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n\n    // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n    if (!validateEmail(email) || !name) {\n      setErrorMessage('Email or name is invalid');\n      // We want to exit out of this code block if something is wrong so that the user can correct it\n      return;\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n    }\n    if (!checkPassword(password)) {\n      setErrorMessage(\n        `Choose a more secure password for the account: ${name}`\n      );\n      return;\n    }\n    //alert(`Hello ${name}`);\n\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\n    setName('');\n    setPassword('');\n    setEmail('');\n  };\n\n    return (\n<div id=\"contact\">\n    <hr></hr>\n    <h2>\n        Contact Me\n    </h2>\n    <div className= \"d-flex justify-content-center\">\n    <div className=\"card\" style={{width:\"25rem\", backgroundColor:\"cornflowerblue\"}}>\n    <div className=\"mb-3\">\n    {/* <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label> */}\n    <input value={email} onChange={handleInputChange} name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Enter Your Email\" />\n  </div>\n  <div className=\"mb-3\">\n    {/* <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label> */}\n    <input value={name} onChange={handleInputChange} name=\"name\" type=\"name\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Enter Your Name\" />\n  </div>\n  <div className=\"mb-3\">\n    <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Enter Your Message</label>\n    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={8} defaultValue={\"\"} />\n    <div className=\"card=footer\">\n        <button type=\"button\" onClick={handleFormSubmit}>Send Message</button>\n    </div>\n  </div>\n  </div>\n</div>\n</div>\n    )\n}\n\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}